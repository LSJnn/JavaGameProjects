2월 8일 : (가안)
	레이아웃 구성. 
	include사용 시도. 
	여러 사이트 및 강의 자료에서 받아옴 -> 추후 제작 이미지로 대체 예정
	
2월 9일 : 
	Constraint Layout-> FrameLayout으로 변경
		? 깔끔하기도 하고, 활용하기 좋음. (Fragment 사용 고려)
	include사용 성공.

2월 11일 :
	DB 연결 시도.
	 실패 - baseColumns 확장 클래스, databaseHelper 등에서 문제 발견. 
		: insert 시 오류 발생

2월 12일 : 
	DB 연결 성공 
		- databaseHelper와 onCreate 구문의 혼동 문제.
		- null object 오류
	bitmap too large 문제 발생
		- 이미지 줄여도 고쳐지지 않음.
		- xxxhdpi 로 옮겨도 고쳐지지 않음

2월 15일 : 
	bitmap 문제 해결 
		- drawable 에서 구성해야함. 
		- 이미지 하나가 줄여도 줄여도 줄여지지 않았음.

	!! 클릭할 때 마다 db의 다음 행으로 넘어가기.(시도)

2월 17일 :
		-db 내 삽입할 반복 텍스트 변수로 설정 변환 시킴.
 
	!! 클릭할 때 마다 db의 다음 행으로 넘어가기.(시도)
	 Cursor를 통해 다양한 시도함 : 
		- for 문 내에 while(iCursor.moveToNext) 구현 시도
		- onClickListener 문 내에 for 문- while 문 중첩 구현 시도
		-touchDialouge() 메소드 생성하여 활용 시도.

		@ db의 값이 안 읽혀짐.
			(추측 : inner 클래스에서 변수 활용 위해 final 선언 해줘서..?)
			
2월 18일 : 
	mysql 을 사용한 DB 강의.(생활 코딩)
	mysql 설치, 재설치. 
	
2월 19일 : Bitnami 를 통해 설치. 

2월 20일 : mySQL 설치 완료. 및 password 설정 완료. demo 테이블 구축
	
	Create : insert
	Read : select : Select PROJECTION = [보고 싶은 컬럼들 (*/ id, characters , ...)] from 테이블 WEHRE 조건 ORDER BY DESC/ASC LIMIT 1;							// limit = 나타내는 열 수 (FOR 데이터 효율적 운용)
	Update : update 테이블 SET 컬럼 = 변경값 WHERE (조건 )
	////////////////Update 는 Where 문 활실히 지정해야함 OR 모든 행이 바뀜.

	DELETE FROM 테이블 WHERE 조건.
	///////////////DELETE 는 FROM 테이블/ WHERE 가 중요!!!! OR 모든 것이 삭제됨.
	
	Join 을 통한 관계형 DB 활용.
	
	sql workbench 라는 새로운 DB 클라이언트 사용 및 활용
	
2월 21일 : workbench 를 이용한 테이블 구성.(SUITEMAN 게임을 위한 DEMO 테이블)
	  및 starUML 을 사용하여 관계도 작성.
	  
2월 25일 : 기획팀에서 새로운 아이디어 구상해옴. : HERESY(이단)
	  레이아웃 및 기초 기능 구현
	  타이핑 기능 구현 시도. -Timer 를 사용한. 
	  
2월 26일 : 부족한 레이아웃 업데이트.
	  TImer . TimerTask 활용 시도. sleep() 시도 실패.
	  구글링 결과 JS/JQuery 를 통해 구현된 기술 찾음. : 나중에 가능하다면 연결하고자 함.
	  참고 : https://gahyun-web-diary.tistory.com/2
	  http://blog.naver.com/PostView.nhn?blogId=pjh445&logNo=221396615227&categoryNo=0&parentCategoryNo=32&viewDate=&currentPage=1&postListTopCurrentPage=1&from=postView
	  
2월 27일 : 타이핑 기능 1차 포기.
	   버튼 클릭 시 나타나게 하기. - setVIsibility 로 세팅
	   --> UI스레드 에서만 사용 가능. 
	   ERROR : Only the original thread that created a view hierarchy can touch its views.\
	   	A. onUIThread 사용./ post(new Runnable) 사용
	   ERROR : Attempt to read from field 'java.lang.Object java.util.TimerTask.lock' on a null object reference
		A. 대상 객체 확인.
		
2월 28일 : 배경음악 삽입 
		- MediaPlayer. 
			: 인텐트 후에도 배경음악 재생 가능하게 수정 필요.
	  새로하기/ 이어하기 기능 추가
	  	- Intent를 사용해 새로하기 이어하기 기능 구현 중
		- SharePreferences 를 통해 간단한 값 저장--> 이어하기 떄 필요한 값 저장.
			: 다만, 인텐트를 통해 새로하기 신호 를 주는 것 다시 시도 해야함.
			 startActivityForResult 로 하면 되려나...... 모르겠다.
			
			
3월 3-4일 : 이어하기 -
		SharedPreferences 사용하여 이어하기 성공!
			- 문제 : 반드시 종료후 다시 실행해야 위치 저장됨...
				--> intent 로 하는 방법 강구 중 BUT, onCLick 안 switch_case 내의 지역 변수 return 불가...
			  
			  @@@n과 sharedPreferences 로 저장한 변수 recentPage 를 동일시!!!
			  
			- 해결책 찾는 중 : 생명주기 학습함. 
			https://developer.android.com/guide/components/activities/activity-lifecycle?refresh=1&hl=ko#java
			  대신 사용하려고 했던 savedInstance() 는 finish() 로 명시적 종료 시 콜백 안됨. 
			  
			  
3월 5일 : 엔딩 목록 팝업창으로 변경.
		-엔딩 아이템 엔딩 글자 수 에 따라 맞춰짐. --> height 만 wrap_content 로 설정.
		-- ListView적용 안됨.......????????.... 그냥 액티비티로 사용. 
	스토리 진행 구현 : 
		- 문제 1. 뷰의 형태가 일정치 않음. - 텍스트 중간에 카톡화면 나와야하고 , 대화창 하나하나로 전개해야함.  
			A. 세이브 지점 지정. 한번 진행되면 다 없애고, 다시 하고 하는 식. 
			A. 그렇다고 카톡 나오는 창은 무조건 다른 액티비티로 인텐트 시켜도 똑같을 듯.. 

			AAAA. setLayout 으로 레이아웃 바꿔주기!
			@@ 카카오 대화창은 어쩔 수 없이 매번 생성. 
			@@ 선택 창은 따로 뺐으면 좋겠는데..
			
		- 구현 : 텍스트뷰만 있는 창layout, 텍스트뷰 + 이미지뷰 layout, 선택창 layout
			: 각 id 부여. 1, 2, 3. --> 1이면 ~/ 2이면 ~ 3이면 ~/ 
				--> intent . setContent로는 안됨. ?? 실행되는 Activity 가 아님. 
				
				
3월 6일 : Story 부분 갈아엎음. 
		- 텍스트만 있는 뷰/ 이미지 +덱스트 뷰 / 선택 창 / 카카오 뷰 창
		- 각 changeCode 1 2 3 4 로 지정. 
		- StartStroy class 생성하여, 스토리 매니징. --> 각 뷰에 해당하도록. 
		- DB 구현은 안해도 될 듯... 시도는 나중에 해도 될 듯.
		
	@ 문제점 : 아직 데이터 전송 부분 구현 안함.
		 : 엔딩 목록 애초에 20개 ??? 로 지정하고 , 엔딩 나오면 변경 하고 싶은데... 아직 구현 못함...
		 : 중복되는 코드 있을 듯. choice class 에서 Success 로 넘어가는 intent 공통 구현 하고 싶음. 
		 
